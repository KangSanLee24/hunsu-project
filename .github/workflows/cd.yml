name: hunsu-project.js CD

on:
  workflow_dispatch: # 수동 실행
  workflow_run: # 특정 workflow가 실행됐을 때
    workflows: ['hunsu-project.js CI'] # CI workflow
    types: [completed] # 완료 되었을 때
    branches: [main] # main 브랜치

env:
  PROJECT_DIR: /home/ubuntu/hunsu-project

jobs:
  deploy:
    # workflow 완료 후 결과가 성공 일 때
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    # 작업을 실행 할 VM의 OS 지정
    runs-on: ubuntu-24.04

    # 작업 내의 단위 작업(step)을 정의
    steps:
      # 소스 코드 가져오기
      - name: Checkout source code # step의 이름 지정 (선택 사항)
        uses: actions/checkout@v4 # 소스 복사를 위해 미리 정의 된 workflow를 불러와서 사용

      # VM에 Node.js 설치하기
      - name: Setup Node.js environment # step의 이름 지정 (선택 사항)
        uses: actions/setup-node@v4 # Node.js 설치를 위해 미리 정의 된 workflow를 불러와서 사용
        with:
          node-version: 20 # 설치 할 Node.js 버전 지정
          cache: 'npm' # npm 사용 시 'npm'

      # VM에 Sentry CLI 설치하기
      - name: Install Sentry CLI
        run: npm install -g @sentry/cli

      - name: Set up Sentry environment
        run: echo "${{ secrets.SENTRY_AUTH_TOKEN }}" | sentry-cli login --auth-token "${{ secrets.SENTRY_AUTH_TOKEN }}"

      #
      - name: Run Sentry wizard for sourcemaps
        run: npx @sentry/wizard@latest -i sourcemaps

      #
      - name: Install dependencies
        run: |
          npm ci

      #
      - name: Build the project
        run: npm run build

      # SSH 접속 후 명령을 통해서 배포 진행
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/ec2.key
          chmod 400 ~/.ssh/ec2.key
          cat >>~/.ssh/config <<END
          Host ec2
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/ec2.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.AWS_EC2_USERNAME }}
          SSH_KEY: ${{ secrets.AWS_EC2_PEM_KEY }}
          SSH_HOST: ${{ secrets.AWS_EC2_HOST }}

      - name: Prepare to deploy
        run: ssh ec2 'cd ${{ env.PROJECT_DIR }} && git switch main && git pull && echo "${{ secrets.ENV }}" > .env.production && echo "${{ secrets.ENV }}" > .env.development && npm install -g @sentry/cli && sentry-cli login --auth-token "${{ secrets.SENTRY_AUTH_TOKEN }}"'

      - name: Copy dist to EC2
        run: rsync -avzP -e ssh ./dist ec2:${{ env.PROJECT_DIR }}/

      - name: Uninstall dev dependence
        run: npm ci --omit=dev

      - name: Copy node_modules to EC2
        run: rsync -avzP -e ssh ./node_modules ec2:${{ env.PROJECT_DIR }}/

      - name: Restart PM2
        run: ssh ec2 'cd ${{ env.PROJECT_DIR }} && ./scripts/run.sh'
